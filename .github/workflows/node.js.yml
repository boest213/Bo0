# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm - name: Deploy Environment
  # You may pin to the exact commit or the version.
  # uses: parasoft/deploy-environment-action@486e9382c6c2958fcbaad60b895da799d16730c2
  uses: parasoft/deploy-environment-action@1.0.2
  with:
    # CTP URL
    ctpUrl: 
    # CTP Username
    ctpUsername: 
    # CTP Password
    ctpPassword: 
    # Name of the system
    system: 
    # Name of the environment
    environment: 
    # Name of the environment instance to provision
    instance: 
    # Fail action and abort on provisioning failure
    abortOnFailure: # optional
    # Virtual assets in the environment will be replicated on another server
    copyToVirtualize: # optional
    # The environment assets will be copied to a Virtualize server matching this name
    virtServerName: # optional
    # The name for the replicated environment can be used to later destroy the environment
    newEnvironmentName: # optional
    # Duplicate associated data repositories before provisioning
    duplicateDataRepo: # optional
    # Where to duplicate data repository
    duplicateType: # optional
    # The host of the data repository server
    repoHost: # optional
    # The port of the data repository server
    repoPort: # optional
    # The username of the data repository server
    repoUsername: # optional
    # The password of the data repository server
    repoPassword: # - name: Sentry Release
  # You may pin to the exact commit or the version.
  # uses: getsentry/action-release@4744f6a65149f441c5f396d5b0877307c0db52c7
  uses: getsentry/action-release@v1.4.1
  with:
    # Set the environment for this release. E.g. "production" or "staging". Omit to skip adding deploy to release.
    environment: # optional
    # Space-separated list of paths to JavaScript sourcemaps. Omit to skip uploading sourcemaps.
    sourcemaps: # optional
    # Unique identifier for the distribution, used to further segment your release. Usually your build number.
    dist: # optional
    # When false, omit marking the release as finalized and released.
    finalize: # optional, default is true
    # When the flag is set and the previous release commit was not found in the repository, will create a release with the default commits count instead of failing the command.
    ignore_missing: # optional
    # When the flag is set, command will not fail and just exit silently if no new commits for a given release have been found.
    ignore_empty: # optional
    # Unix timestamp of the release start date. Omit for current time.
    started_at: # optional
    # Identifier that uniquely identifies the releases. Omit to auto-generate one.
    version: # optional
    # Value prepended to auto-generated version.
    version_prefix: # optional
    # Specify whether to set commits for the release. Either "auto" or "skip".
    set_commits: # optional
    # Space-separated list of projects. Defaults to the env variable "SENTRY_PROJECT" if not provided.
    projects: # optional
    # Adds a prefix to source map urls after stripping them.
    url_prefix: # optional
    # Will remove a common prefix from uploaded filenames. Useful for removing a path that is build-machine-specific.
    strip_common_prefix: # optional
    # Directory to collect sentry release information from. Useful when collecting information from a non-standard checkout directory.
    working_directory: # optional
